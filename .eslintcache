[{"E:\\Web Development\\Redux\\weather-redux\\src\\App.js":"1","E:\\Web Development\\Redux\\weather-redux\\src\\index.js":"2","E:\\Web Development\\Redux\\weather-redux\\src\\components\\reducers\\weatherReducer.js":"3","E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\types.js":"4","E:\\Web Development\\Redux\\weather-redux\\src\\components\\reducers\\rootReducer.js":"5","E:\\Web Development\\Redux\\weather-redux\\src\\components\\store\\store.js":"6","E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\weatherActions.js":"7","E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\index.js":"8","E:\\Web Development\\Redux\\weather-redux\\src\\components\\pages\\Weather\\Weather.js":"9"},{"size":350,"mtime":1610968851383,"results":"10","hashOfConfig":"11"},{"size":372,"mtime":1610950140274,"results":"12","hashOfConfig":"11"},{"size":768,"mtime":1610954351766,"results":"13","hashOfConfig":"11"},{"size":188,"mtime":1610939626477,"results":"14","hashOfConfig":"11"},{"size":187,"mtime":1610926469860,"results":"15","hashOfConfig":"11"},{"size":371,"mtime":1610927005364,"results":"16","hashOfConfig":"11"},{"size":1272,"mtime":1610956925741,"results":"17","hashOfConfig":"11"},{"size":121,"mtime":1610927188617,"results":"18","hashOfConfig":"11"},{"size":4324,"mtime":1610956645352,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ewf7fx",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},"E:\\Web Development\\Redux\\weather-redux\\src\\App.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\index.js",[],["41","42"],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\reducers\\weatherReducer.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\types.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\reducers\\rootReducer.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\store\\store.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\weatherActions.js",["43"],"import { GET_WEATHER_INPUT, FETCH_WEATHER_INFO, FETCH_WEATHER_INFO_BY_LAT_LONG } from \"./types\";\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nconst getWeatherInput = (e) => {\r\n    return {\r\n        type: GET_WEATHER_INPUT,\r\n        payload: e,\r\n    }\r\n};\r\n\r\nconst fetchWeatherInfo = (query) => (dispatch) => {\r\n    let checkFetch = (response) => {\r\n        if (!response.ok) {\r\n          throw alert(\"Please enter an existing city name\");\r\n        }\r\n        return response;\r\n      };\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${[\r\n        query,\r\n      ]}&appid=${process.env.REACT_APP_API_KEY}`)\r\n    .then(checkFetch)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        dispatch({\r\n            type: FETCH_WEATHER_INFO,\r\n            payload: data\r\n        })\r\n    })\r\n};\r\n\r\nconst fetchWeatherInfoByLatLong = (lat, long) => (dispatch) => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_API_KEY}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        dispatch({\r\n            type: FETCH_WEATHER_INFO_BY_LAT_LONG,\r\n            payload: data\r\n        })\r\n    })\r\n};\r\n\r\nexport default {\r\n    getWeatherInput,\r\n    fetchWeatherInfo,\r\n    fetchWeatherInfoByLatLong\r\n}\r\n","E:\\Web Development\\Redux\\weather-redux\\src\\components\\actions\\index.js",[],"E:\\Web Development\\Redux\\weather-redux\\src\\components\\pages\\Weather\\Weather.js",["44","45","46"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from '../../actions/index'\r\nimport './Weather.css'\r\nimport upperDesign from \"../../images/UPPER DESIGN.svg\";\r\nimport logo from \"../../images/Logo.svg\";\r\n\r\nfunction Weather() {\r\n    const weather = useSelector((state) => state.weatherReducer);\r\n    const dispatch = useDispatch();\r\n    const [query, setQuery] = useState()\r\n    let defaultIcon = 'http://openweathermap.org/img/wn/10d@2x.png'\r\n    let d = new Date();\r\n    let date = d.toDateString();\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation \r\n              ?   navigator.geolocation.getCurrentPosition((position) => {\r\n                  dispatch(allActions.weatherActions.fetchWeatherInfoByLatLong(position.coords.latitude, position.coords.longitude))\r\n              })   :   alert(\"Please enter a city\")\r\n    }, [])\r\n    useEffect(() => {\r\n        if(query) {\r\n          dispatch(allActions.weatherActions.fetchWeatherInfo(query))\r\n        }\r\n    }, [query])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setQuery(weather.input)\r\n        weather.input = ''\r\n    }\r\n    \r\n    return (\r\n      <div className='container'>\r\n          {weather.weatherInfo ? (\r\n          <div>\r\n              <img src={upperDesign} className=\"top-wave\" alt=\"wave\" />\r\n              <img src={upperDesign} className=\"bottom-wave\" alt=\"wave\" />\r\n              <div className=\"logo\">\r\n                  <a href=\"#\">\r\n                      <img src={logo} alt=\"logo\" />\r\n                  </a>\r\n              </div>\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h2>\r\n                    {weather.weatherInfo.name} - {weather.weatherInfo.sys.country}\r\n                  </h2> \r\n                  <h3>{Math.floor(weather.weatherInfo.main.temp - 273.15)} &deg; C</h3>\r\n                </div>\r\n                <div className=\"card-columns\">\r\n                  <div className=\"clouds\">\r\n                    <div>\r\n                      <h2>{weather.weatherInfo.clouds.all}</h2>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>Clouds Count</h2>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"first\"></hr>\r\n                  <div className=\"weather\">\r\n                    <div>\r\n                      <img src={weather.weatherInfo ? `http://openweathermap.org/img/wn/${weather.weatherInfo.weather[0].icon}@2x.png` : defaultIcon} alt=\"weather icon\" />\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>{weather.weatherInfo.weather[0].description}</h2>\r\n                    </div>\r\n                  </div>\r\n                  <hr></hr>\r\n                  <div className=\"wind\">\r\n                    <div>\r\n                      <h2>\r\n                        {weather.weatherInfo.wind.deg} &deg; - {Math.ceil((weather.weatherInfo.wind.speed / 1000) * 3600)} kph\r\n                      </h2>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>Wind</h2>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h2 className=\"card-footer\"> {date} </h2>\r\n              </div>\r\n              <form className='form' onSubmit={(e) => handleSubmit(e)}>\r\n                  <div className=\"input-container\">\r\n                      <input\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        onChange={(e) => dispatch(allActions.weatherActions.getWeatherInput(e.target.value))}\r\n                        value={weather.input}\r\n                        placeholder=\"Please enter a City name\"\r\n                      />\r\n                      <br />\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"submit\"\r\n                        className=\"search-btn\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                      >Submit\r\n                      </button>\r\n                  </div>\r\n              </form>    \r\n          </div>\r\n          ) : (<h1>Loading....</h1>)}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":43,"column":1,"nodeType":"53","endLine":47,"endColumn":2},{"ruleId":"54","severity":1,"message":"55","line":21,"column":8,"nodeType":"56","endLine":21,"endColumn":10,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"55","line":26,"column":8,"nodeType":"56","endLine":26,"endColumn":15,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":41,"column":19,"nodeType":"61","endLine":41,"endColumn":31},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["64"],["65"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [dispatch]",{"range":"70","text":"71"},"Update the dependencies array to be: [dispatch, query]",{"range":"72","text":"73"},[905,907],"[dispatch]",[1043,1050],"[dispatch, query]"]