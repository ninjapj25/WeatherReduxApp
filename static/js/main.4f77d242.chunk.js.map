{"version":3,"sources":["components/actions/types.js","components/actions/weatherActions.js","components/actions/index.js","components/images/UPPER DESIGN.svg","components/images/Logo.svg","components/pages/Weather/Weather.js","App.js","components/reducers/weatherReducer.js","components/reducers/rootReducer.js","components/store/store.js","index.js"],"names":["GET_WEATHER_INPUT","FETCH_WEATHER_INFO","FETCH_WEATHER_INFO_BY_LAT_LONG","dotenv","config","allActions","weatherActions","getWeatherInput","e","type","payload","fetchWeatherInfo","query","dispatch","fetch","process","then","response","ok","alert","res","json","data","fetchWeatherInfoByLatLong","lat","long","Weather","weather","useSelector","state","weatherReducer","useDispatch","useState","setQuery","date","Date","toDateString","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleSubmit","preventDefault","input","className","weatherInfo","src","upperDesign","alt","href","logo","name","sys","country","Math","floor","main","temp","clouds","all","icon","description","wind","deg","ceil","speed","onSubmit","autoFocus","onChange","target","value","placeholder","onClick","App","exact","path","component","initialState","action","rootReducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f77d242.chunk.js","sourcesContent":["export const GET_WEATHER_INPUT = 'GET_WEATHER_INPUT'\r\nexport const FETCH_WEATHER_INFO = 'FETCH_WEATHER_INFO'\r\nexport const FETCH_WEATHER_INFO_BY_LAT_LONG = 'FETCH_WEATHER_INFO_BY_LAT_LONG'","import { GET_WEATHER_INPUT, FETCH_WEATHER_INFO, FETCH_WEATHER_INFO_BY_LAT_LONG } from \"./types\";\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nconst getWeatherInput = (e) => {\r\n    return {\r\n        type: GET_WEATHER_INPUT,\r\n        payload: e,\r\n    }\r\n};\r\n\r\nconst fetchWeatherInfo = (query) => (dispatch) => {\r\n    let checkFetch = (response) => {\r\n        if (!response.ok) {\r\n          throw alert(\"Please enter an existing city name\");\r\n        }\r\n        return response;\r\n      };\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${[\r\n        query,\r\n      ]}&appid=${process.env.REACT_APP_API_KEY}`)\r\n    .then(checkFetch)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        dispatch({\r\n            type: FETCH_WEATHER_INFO,\r\n            payload: data\r\n        })\r\n    })\r\n};\r\n\r\nconst fetchWeatherInfoByLatLong = (lat, long) => (dispatch) => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${process.env.REACT_APP_API_KEY}`)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n        dispatch({\r\n            type: FETCH_WEATHER_INFO_BY_LAT_LONG,\r\n            payload: data\r\n        })\r\n    })\r\n};\r\n\r\nexport default {\r\n    getWeatherInput,\r\n    fetchWeatherInfo,\r\n    fetchWeatherInfoByLatLong\r\n}\r\n","import weatherActions from './weatherActions'\r\n\r\nconst allActions = {\r\n    weatherActions\r\n}\r\n\r\nexport default allActions","export default __webpack_public_path__ + \"static/media/UPPER DESIGN.9c162000.svg\";","export default __webpack_public_path__ + \"static/media/Logo.23cf4053.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport allActions from '../../actions/index'\r\nimport './Weather.css'\r\nimport upperDesign from \"../../images/UPPER DESIGN.svg\";\r\nimport logo from \"../../images/Logo.svg\";\r\n\r\nfunction Weather() {\r\n    const weather = useSelector((state) => state.weatherReducer);\r\n    const dispatch = useDispatch();\r\n    const [query, setQuery] = useState()\r\n    let defaultIcon = 'http://openweathermap.org/img/wn/10d@2x.png'\r\n    let d = new Date();\r\n    let date = d.toDateString();\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation \r\n              ?   navigator.geolocation.getCurrentPosition((position) => {\r\n                  dispatch(allActions.weatherActions.fetchWeatherInfoByLatLong(position.coords.latitude, position.coords.longitude))\r\n              })   :   alert(\"Please enter a city\")\r\n    }, [])\r\n    useEffect(() => {\r\n        if(query) {\r\n          dispatch(allActions.weatherActions.fetchWeatherInfo(query))\r\n        }\r\n    }, [query])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setQuery(weather.input)\r\n        weather.input = ''\r\n    }\r\n    \r\n    return (\r\n      <div className='container'>\r\n          {weather.weatherInfo ? (\r\n          <div>\r\n              <img src={upperDesign} className=\"top-wave\" alt=\"wave\" />\r\n              <img src={upperDesign} className=\"bottom-wave\" alt=\"wave\" />\r\n              <div className=\"logo\">\r\n                  <a href=\"#\">\r\n                      <img src={logo} alt=\"logo\" />\r\n                  </a>\r\n              </div>\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h2>\r\n                    {weather.weatherInfo.name} - {weather.weatherInfo.sys.country}\r\n                  </h2> \r\n                  <h3>{Math.floor(weather.weatherInfo.main.temp - 273.15)} &deg; C</h3>\r\n                </div>\r\n                <div className=\"card-columns\">\r\n                  <div className=\"clouds\">\r\n                    <div>\r\n                      <h2>{weather.weatherInfo.clouds.all}</h2>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>Clouds Count</h2>\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"first\"></hr>\r\n                  <div className=\"weather\">\r\n                    <div>\r\n                      <img src={weather.weatherInfo ? `http://openweathermap.org/img/wn/${weather.weatherInfo.weather[0].icon}@2x.png` : defaultIcon} alt=\"weather icon\" />\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>{weather.weatherInfo.weather[0].description}</h2>\r\n                    </div>\r\n                  </div>\r\n                  <hr></hr>\r\n                  <div className=\"wind\">\r\n                    <div>\r\n                      <h2>\r\n                        {weather.weatherInfo.wind.deg} &deg; - {Math.ceil((weather.weatherInfo.wind.speed / 1000) * 3600)} kph\r\n                      </h2>\r\n                    </div>\r\n                    <br />\r\n                    <div>\r\n                      <h2>Wind</h2>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <h2 className=\"card-footer\"> {date} </h2>\r\n              </div>\r\n              <form className='form' onSubmit={(e) => handleSubmit(e)}>\r\n                  <div className=\"input-container\">\r\n                      <input\r\n                        type=\"text\"\r\n                        autoFocus\r\n                        onChange={(e) => dispatch(allActions.weatherActions.getWeatherInput(e.target.value))}\r\n                        value={weather.input}\r\n                        placeholder=\"Please enter a City name\"\r\n                      />\r\n                      <br />\r\n                      <button\r\n                        type=\"submit\"\r\n                        value=\"submit\"\r\n                        className=\"search-btn\"\r\n                        onClick={(e) => handleSubmit(e)}\r\n                      >Submit\r\n                      </button>\r\n                  </div>\r\n              </form>    \r\n          </div>\r\n          ) : (<h1>Loading....</h1>)}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Weather;\r\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Weather from './components/pages/Weather/Weather';\n\n\nfunction App() {\n    return (\n      <BrowserRouter>\n        <Switch>\n            <Route exact path={'/'} component={Weather} />\n        </Switch>\n      </BrowserRouter>\n    );\n}\n\nexport default App;\n","import {\r\n    GET_WEATHER_INPUT,\r\n    FETCH_WEATHER_INFO,\r\n    FETCH_WEATHER_INFO_BY_LAT_LONG\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    input: '',\r\n    weatherInfo: ''\r\n};\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_WEATHER_INPUT:\r\n            return {\r\n                ...state,\r\n                input: action.payload\r\n            }\r\n        case FETCH_WEATHER_INFO:\r\n        return {\r\n            ...state,\r\n            weatherInfo: action.payload\r\n        }\r\n        case FETCH_WEATHER_INFO_BY_LAT_LONG:\r\n        return {\r\n            ...state,\r\n            weatherInfo: action.payload\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default weatherReducer","import { combineReducers } from \"redux\";\r\nimport weatherReducer from \"./weatherReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    weatherReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nimport store from \"./components/store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}